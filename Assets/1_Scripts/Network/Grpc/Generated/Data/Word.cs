// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: word.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Data.Word {

  /// <summary>Holder for reflection information generated from word.proto</summary>
  public static partial class WordReflection {

    #region Descriptor
    /// <summary>File descriptor for word.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WordReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgp3b3JkLnByb3RvEglkYXRhLndvcmQiRwoEV29yZBIKCgJpZBgBIAEoBRIQ",
            "CghzcGVsbGluZxgCIAEoCRIPCgdtZWFuaW5nGAMgASgJEhAKCG1lYW5pbmcy",
            "GAQgASgJInIKBVdvcmRzEioKBXdvcmRzGAEgAygLMhsuZGF0YS53b3JkLldv",
            "cmRzLldvcmRzRW50cnkaPQoKV29yZHNFbnRyeRILCgNrZXkYASABKAUSHgoF",
            "dmFsdWUYAiABKAsyDy5kYXRhLndvcmQuV29yZDoCOAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Data.Word.Word), global::Data.Word.Word.Parser, new[]{ "Id", "Spelling", "Meaning", "Meaning2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Data.Word.Words), global::Data.Word.Words.Parser, new[]{ "Words_" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Word : pb::IMessage<Word> {
    private static readonly pb::MessageParser<Word> _parser = new pb::MessageParser<Word>(() => new Word());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Word> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Data.Word.WordReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Word() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Word(Word other) : this() {
      id_ = other.id_;
      spelling_ = other.spelling_;
      meaning_ = other.meaning_;
      meaning2_ = other.meaning2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Word Clone() {
      return new Word(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "spelling" field.</summary>
    public const int SpellingFieldNumber = 2;
    private string spelling_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Spelling {
      get { return spelling_; }
      set {
        spelling_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "meaning" field.</summary>
    public const int MeaningFieldNumber = 3;
    private string meaning_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Meaning {
      get { return meaning_; }
      set {
        meaning_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "meaning2" field.</summary>
    public const int Meaning2FieldNumber = 4;
    private string meaning2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Meaning2 {
      get { return meaning2_; }
      set {
        meaning2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Word);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Word other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Spelling != other.Spelling) return false;
      if (Meaning != other.Meaning) return false;
      if (Meaning2 != other.Meaning2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Spelling.Length != 0) hash ^= Spelling.GetHashCode();
      if (Meaning.Length != 0) hash ^= Meaning.GetHashCode();
      if (Meaning2.Length != 0) hash ^= Meaning2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Spelling.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Spelling);
      }
      if (Meaning.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Meaning);
      }
      if (Meaning2.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Meaning2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Spelling.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Spelling);
      }
      if (Meaning.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Meaning);
      }
      if (Meaning2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Meaning2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Word other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Spelling.Length != 0) {
        Spelling = other.Spelling;
      }
      if (other.Meaning.Length != 0) {
        Meaning = other.Meaning;
      }
      if (other.Meaning2.Length != 0) {
        Meaning2 = other.Meaning2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Spelling = input.ReadString();
            break;
          }
          case 26: {
            Meaning = input.ReadString();
            break;
          }
          case 34: {
            Meaning2 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Words : pb::IMessage<Words> {
    private static readonly pb::MessageParser<Words> _parser = new pb::MessageParser<Words>(() => new Words());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Words> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Data.Word.WordReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Words() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Words(Words other) : this() {
      words_ = other.words_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Words Clone() {
      return new Words(this);
    }

    /// <summary>Field number for the "words" field.</summary>
    public const int Words_FieldNumber = 1;
    private static readonly pbc::MapField<int, global::Data.Word.Word>.Codec _map_words_codec
        = new pbc::MapField<int, global::Data.Word.Word>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::Data.Word.Word.Parser), 10);
    private readonly pbc::MapField<int, global::Data.Word.Word> words_ = new pbc::MapField<int, global::Data.Word.Word>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Data.Word.Word> Words_ {
      get { return words_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Words);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Words other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Words_.Equals(other.Words_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Words_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      words_.WriteTo(output, _map_words_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += words_.CalculateSize(_map_words_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Words other) {
      if (other == null) {
        return;
      }
      words_.Add(other.words_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            words_.AddEntriesFrom(input, _map_words_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
